@startuml Combat Details

namespace Combat {
    !startsub PLAYER
    namespace Combat.Player {
        class PlayerCombatController <<MonoBehaviour>> {
            +<<get>> Attack : Command
            +<<get>> Defend : Command
            +<<get>> Dodge : Command
            -currentEffects : CombatEffect[]
            -LoadCombatData()
            -CheckBlockSuccess()
            -FaceTarget()
            -ReadDodgeDirectionInCameraSpace()
        }
    }
    !endsub PLAYER

    namespace Combat.Attributes {

        abstract ActorAttribute< T : ValueType > {
            +<<get/set>> Value : T
            +<<get>> BaseValue : T
            +<<get>> ValueRange : pair<T,T>
            +onValueChanged : event
        }
        !startsub PLAYER
        class Combat.Attributes.PlayerCombatAttributes {
            +<<get>> Health : HealthAttribute
            +<<get>> Stamina : StaminaAttribute
        }
        Combat.Player.PlayerCombatController *-- Combat.Attributes.PlayerCombatAttributes

        class Combat.Attributes.HealthAttribute<float> implements ActorAttribute
        Combat.Attributes.PlayerCombatAttributes o-- Combat.Attributes.HealthAttribute

        class Combat.Attributes.StaminaAttribute<float> implements ActorAttribute
        Combat.Attributes.PlayerCombatAttributes o-- Combat.Attributes.StaminaAttribute

        class Combat.Attributes.PoiseAttribute<float> implements ActorAttribute
        Combat.Attributes.PlayerCombatAttributes o-- Combat.Attributes.PoiseAttribute
        !endsub PLAYER

        hide members
    }

    namespace Combat.Encounters {
        class LockOnDetector <<MonoBehaviour>> {
            +PossibleTargets : List<Actor>
        }
        Combat.Player.PlayerCombatController *-- LockOnDetector
    }

    namespace Combat.HitDetection {
        interface IHittable {
            +OnGetHit()
        }
        class Combat.Player.PlayerCombatController implements IHittable
    }

    namespace Combat.Effects {
        abstract CombatEffect
        abstract InstantEffect extends CombatEffect
        abstract OvertimeEffect extends CombatEffect
        class Damage implements InstantEffect
        class Stagger implements InstantEffect
        class DamageOvertime implements OvertimeEffect
        class StaminaRegen implements OvertimeEffect
        class HealthRegen implements OvertimeEffect

        Combat.Player.PlayerCombatController "1" o-- "0..*" CombatEffect

        note "Player may be under\nmultiple effects." as FloatingNoteEffects
    }
}

package GameData.Player <<Database>> {
    class PlayerCombatData <<ScriptableObject>> {
        +baseMaxHealth : float
        +baseMaxStamina : float
        +baseMaxPoise : float
        +dodgeStaminaCost : float
        +blockBreakDamageModifier : float
        +maximumBlockAngle : float
        +lockOnBodyRotationLerpSpeed : float
    }
    Combat.Player.PlayerCombatController -- PlayerCombatData
}
note bottom: Serialized data\nin <b>.asset</b> files\nretrieved at\nruntime.

hide empty members
@enduml