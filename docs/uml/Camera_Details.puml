@startuml Camera Details

!include styledefs.iuml

title Bright Souls - Camera System Diagram\n

package Cinemachine {
    class CinemachineBrain $stereo("Component") {
        + $get $type("CinemachineVirtualCamera[]") VirtualCameras
        + $get $type("CinemachineSignal[]")        Triggers
        + $get $type("CinemachineTransition[]")    Transitions
    }
    abstract CinemachineVirtualCamera $stereo("Component") {
        + $get $type("Transform") FollowTarget
        + $get $type("Transform") LookAtTarget
        $sep("Body Properties")
        + $get $type("TransposingStrategy") Transposer
        $sep("Aim Properties")
        + $get $type("ComposingStrategy")   Composer
    }
}

package UnityEngine {
    class MainCamera <<(O,orchid)<color:gray>GameObject>> {
    }
}

class Player $stereo("MonoBehaviour") {
    + $type("event") OnDisableLockOn()
    + $type("event") OnLockOnTarget()
    + $type("event") OnTargetDeath()
}

abstract PlayerCameraBehaviour $stereo("MonoBehaviour") {
    - {abstract} $type("void") Initialize()
    - {abstract} $type("void") ReadInput()
}

class PlayerCameraDirector $stereo("MonoBehaviour") {
    + $get CameraMode
    - $type("void") UpdateActiveCameras()
}

class LockOnCamera implements PlayerCameraBehaviour {
    +<<get>> $type("Transform") LockOnTarget
    - $type("void") Initialize()
    - $type("void") ReadInput()
    - $type("void") ChangeTarget()
}

class OrbitalCamera implements PlayerCameraBehaviour {
    - $type("void") Initialize()
    - $type("void") ReadInput(x,y)
    - $type("void") Rotate()
}

MainCamera *-- CinemachineBrain
CinemachineBrain "1" *-- "1..n" CinemachineVirtualCamera
Player -r-> CinemachineBrain : Signals
CinemachineVirtualCamera *-- PlayerCameraBehaviour
Player --> PlayerCameraDirector : Signals
PlayerCameraDirector --> "Manage   \nActivation   " PlayerCameraBehaviour::Initialize

note bottom of CinemachineVirtualCamera : We use the VirtualCamera\nclass for Orbital and LockOn\ncameras, but each have\ndifferent Tranposing and\nComposing strategies.

@enduml